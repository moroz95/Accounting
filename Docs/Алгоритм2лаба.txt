Создать таблицы в БД:
students - информаиця о студентах (id, ФИО, год рожения, номер зачётки, год поступления)
groups - информация о группах (номер группы, дата формирования, удалена)
students_groups - информация о группах со студентами(номер группы(связь 1:1 с таблицей groups), студенты( связь с таблицей students 1:M), староста)
teachers - информация о преподавателях (id, ФИО)
exams - информация о экзаменах (id, название экзамена, тип экзамена(зачёт или экзамен),дата, препод(связь 1:M с таблицей teachers))


exams_eval - данные о проведённых экзаменах (экзамен_id(связь 1:1 с таблицей exams),студент(связь 1:М с таблицей students), оценка)

Разделы:
----------------
Раздел "Группы":
Добавление, удаление,изменение группы

+
перед появлением редактора добавления необходимо сформировать таблицу со списком ссылок с
названиями всех групп втч "Студенты без группы".При переходе по каждой из них открывается редактор студентов только этой группы
+
При добавлении группы проверка, если группа с таким номером уже существует(делаем запрос к groups), выдаём предупреждение

При удалении группы, делаем запрос на всех студентов, которые обучались в этой группе (к таблице students_groups)
и для каждого в ней меняем его группу на "Без группы". А в таблице groups изменяем для удалённой группы значение в поле Удалена на "Да" (нет по дефолту). Группы со значением "Да" поля Удалена не отображаютя в разделе группы
Для студентов которые стали "Без группы" информация о курсе должна быть сохранена
---------<продолжить читать чуть пониже>-----------
Раздел "Студенты":
Добавление, удаление,изменение студента

Перед появлением редактора добавления необходимо сформировать таблицу (такая же таблица как и в разделе Группы) со списком ссылок с названиями всех групп втч "Студенты без группы".При переходе по каждой из них открывается редактор студентов только этой группы

///Добавление студента +
Сначала отдельно добавляем студента в таблицу students ФИО, год рожения, номер зачётки, год поступления (по дефолту не указан)

///Добавление студента в группу +
Когда студент добавляется в группу в первый раз
Если в таблице students_groups для данного студента группа ещё не указана(делаем проверку)
добавляем данные о студенте и группе в таблицу students_groups
делаем запрос к таблице groups. Запрашиваем дату формирования группы в которую мы добавили студента
Узнав эту дату записываем её как год поступления этого студента в таблицу students

!!!!Иначе!!!!

//Изменение группы студента+
если группа указана (если не указана - смотреть предыдущий пункт) то делаем запрос к таблице students, чтобы узнать год поступления. Записываем год поступления в переменную
Это нужно для вывода списка <select> только тех групп, которые подходят по курсу(с таким же курсом) в optionах
В option'ы будут циклически выводится результаты запроса к таблице groups, где год формирования группы такой же, как и год поступления из переменной
Получили список групп в селект. Ту, которую выбрали из селекта на форме записываем в students_groups как группу соответствующую студенту.

//Удалеие+
при удалении студента удаляются и все его оценки.

--------------------
Раздел "Экзамены":
Добавление, удаление,изменение экзамена

//Добавление экзамена+
В таблицу exams заносится вся информация о новом экзамене -  название экзамена, тип экзамена(зачёт или экзамен),дата, препод(связь 1:M с таблицей teachers))

//Изменение и Удалеие  экзамена+
(изменение таблицы exams)
при попытке удаления экзамена, осуществляется поиск оценок по нему.
Делается запрос к таблице exams_eval. 
Если хотя бы одна оценка проставлена хотя бы одному студенту – он не удаляется, выводится соответствующее предупреждение.
--------------------

Раздел "Оценки":
Добавление, удаление,изменение оценок

Выводим список всех доступных экзаменов нажав на ссылку переходи на страницу редактирования экзамена
На странице в виде таблицы выводится список всех студентов (кроме студентов без группы) с
указанием номера группы и селектор для выбора оценки каждому из них( делаем запрос: если в базе данное испытаение проходит как зачёт отображаем селекторы зачёт/незачёт(в базу в качестве оценки пишем 1 или 0), если экзамен - оценки Отлично/Хорошо/Удовлетворительно/Неудовлетворительно(в базу в качестве оценки пишем 2 - 5));
(?от себя) если информация о оценке есть, то выводим её в селектор

при нажатии кнопки "Оценить" внизу таблицы информация об оценках заносится в базу в таблицу exams_eval

exams_eval - данные о проведённых экзаменах (экзамен_id(связь 1:1 с таблицей exams),студент(связь 1:М с таблицей students), оценка)
--------------------

Раздел "Ведомость": +
Добавление, удаление,изменение ведомостей

выводится форма, содержащая списки <select> с названиями групп и с названиями
экзаменов и кнопку "Сформировать";
По нажатии кнопки осуществляется переход на страницу ведомости (в новой вкладке);
в ведомости указываются только те студенты, которые еще не сдали этот экзамен
!!!!Придумать!!!!
####Вариант##
Делаем джоин таблицы студентов группы и выбранного экзамена экзамена из таблицы exams_eval
Тех, у кого поле оценка не пустое - не выводить, остальных выводить
######
(получаем всех студентов, сдававших этот экзамен из таблицы exams_eval. Нам нужно вывести наоборот, всех тех, кто не сдал)
ведомость содержит список студентов, графу для оценки, номер группы, название экзамена,
тип экзамена;

--------------------
Раздел "Успеваемость группы"+

группы - ссылки
по ссылке внутри группы таблица 
студент|сколько испытаний сдал
Если студент ни сдал ни одного,то он не включается в выборку

Для студентов с указанной группой делаем запрос к таблице exams_eval чтобы узнать сколько всего испытаний прошёл студент

--------------------
Раздел "Средняя успеваемость"+
группы - ссылки
по ссылке внутри группы таблица 
Делаем запрос к таблице exams_eval для студентов конкретной группы
для каждого студента суммируем все его оценки за все экзамены (суммируем только оценки 2 - 5)
и делим на количество экзаменов	данного студента 
студенты сортируются от высокого среднего балла к низкому
студенты "Без группы" не фигурируют в отчете;
средний балл указывается в цифрах и итоговой оценке (например, "ХОРОШО / 4.18");